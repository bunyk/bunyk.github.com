{"pageProps":{"id":"sicp1.2.1","title":"SICP1.2.1 Recursion & Iteration","date":"2020-06-14T18:28:16.000Z","tags":["SICP"],"updated_at":"2022-10-10T22:49:27+02:00","content":"<p>Ok, second subchapter is more challenging, so I'll go by subsections.</p>\n<h2 id=\"exercise-19\">Exercise 1.9</h2>\n<p>This is trivial. This procedure generates recursive process:</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> a b)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">if</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> a <span class=\"hljs-number\">0</span>)\n      b\n      (<span class=\"hljs-name\">inc</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> (<span class=\"hljs-name\">dec</span> a) b))))</code></pre>\n<p>And this iterative:</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> a b)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">if</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> a <span class=\"hljs-number\">0</span>)\n      b\n      (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> (<span class=\"hljs-name\">dec</span> a) (<span class=\"hljs-name\">inc</span> b))))</code></pre>\n<p>We could see this even without substitution model, if function returns itself in the and without any additional operation on its result - it is tail-recursive, so generates iterative process, otherwise - recursive.</p>\n<h2 id=\"exercise-110-ackerman-function\">Exercise 1.10 (Ackerman function)</h2>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">A</span> x y)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cond</span></span> ((<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> y <span class=\"hljs-number\">0</span>) <span class=\"hljs-number\">0</span>)\n        ((<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> x <span class=\"hljs-number\">0</span>) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> <span class=\"hljs-number\">2</span> y))\n        ((<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> y <span class=\"hljs-number\">1</span>) <span class=\"hljs-number\">2</span>)\n        (<span class=\"hljs-name\"><span class=\"hljs-built_in\">else</span></span> (<span class=\"hljs-name\">A</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">-</span></span> x <span class=\"hljs-number\">1</span>)\n                 (<span class=\"hljs-name\">A</span> x (<span class=\"hljs-name\"><span class=\"hljs-built_in\">-</span></span> y <span class=\"hljs-number\">1</span>))))))</code></pre>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">10</span>)\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">0</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">9</span>))\n    => (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> <span class=\"hljs-number\">2</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">9</span>))\n    => (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> <span class=\"hljs-number\">2</span> (<span class=\"hljs-name\">*2</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">8</span>)))\n    ...\n    => (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> <span class=\"hljs-number\">2</span>^9 (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">1</span>))\n    => <span class=\"hljs-number\">2</span>^<span class=\"hljs-number\">10</span></code></pre>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">4</span>)\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">3</span>))\n    => <span class=\"hljs-number\">2</span>^(<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">3</span>)\n    <span class=\"hljs-comment\">;;; see below ;;;</span>\n    => <span class=\"hljs-number\">2</span>^<span class=\"hljs-number\">16</span></code></pre>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">3</span>)\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">2</span>)) \n    => <span class=\"hljs-number\">2</span>^(<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">2</span>)\n    <span class=\"hljs-comment\">;;; see below ;;;</span>\n    => <span class=\"hljs-number\">2</span>^<span class=\"hljs-number\">4</span> => <span class=\"hljs-number\">16</span></code></pre>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">2</span>)\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">1</span>))\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">2</span>)\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">0</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">1</span>)) \n    => (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">2</span>)\n    => <span class=\"hljs-number\">4</span></code></pre>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">3</span>)\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">2</span>))\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">1</span>)))\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">2</span>))\n    <span class=\"hljs-comment\">;;; see one above ;;;</span>\n    => (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">4</span>)\n    <span class=\"hljs-comment\">;;; see 3 above ;;;</span>\n    => <span class=\"hljs-number\">2</span>^<span class=\"hljs-number\">16</span></code></pre>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">f</span> n) (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">0</span> n))</code></pre>\n<p><code>f(n) = 2n</code></p>\n<pre><code class=\"hljs language-scheme\"> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">g</span> n) (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">1</span> n))</code></pre>\n<p><code>g(n) = 2^n</code></p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">h</span> n) (<span class=\"hljs-name\">A</span> <span class=\"hljs-number\">2</span> n))</code></pre>\n<p><code>h(1) = 2</code>\n<code>h(n) = 2^(h(n-1))</code></p>"},"__N_SSG":true}