{"pageProps":{"id":"sicp2.5.1","title":"SICP 2.5.1 Generic arithmetic operations","date":"2020-09-02T17:27:13.000Z","tags":["SICP"],"updated_at":"2021-04-20T00:38:16+02:00","content":"<p>In <a href=\"/posts/sicp2.4/\">previous post</a> I have used wrong StackOverflow answer. :) Or, to be more precise, right answer for that section, but useless here, as we want to store in table functions for multiple arguments.</p>\n<p><a href=\"https://stackoverflow.com/a/19114031/816449\">Correct answer</a> that supports lists looks like this:</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> *op-table* (<span class=\"hljs-name\">make-hash-table</span>))\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">put</span> op type proc)\n  (<span class=\"hljs-name\">hash-table/put!</span> *op-table* (<span class=\"hljs-name\"><span class=\"hljs-built_in\">list</span></span> op type) proc))\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">get</span> op type)\n  (<span class=\"hljs-name\">hash-table/get</span> *op-table* (<span class=\"hljs-name\"><span class=\"hljs-built_in\">list</span></span> op type) <span class=\"hljs-literal\">#f</span>))</code></pre>\n<p>Also I needed to copypaste a lot of code to be able to start working on <a href=\"#exercise-2-77\">first exercise</a>:</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">attach-tag</span> type-tag contents)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> type-tag contents))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">type-tag</span> datum)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">if</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">pair?</span></span> datum)\n      (<span class=\"hljs-name\"><span class=\"hljs-built_in\">car</span></span> datum)\n      (<span class=\"hljs-name\">error</span> <span class=\"hljs-string\">\"Bad tagged datum -- TYPE-TAG\"</span> datum)))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">contents</span> datum)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">if</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">pair?</span></span> datum)\n      (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cdr</span></span> datum)\n      (<span class=\"hljs-name\">error</span> <span class=\"hljs-string\">\"Bad tagged datum -- CONTENTS\"</span> datum)))\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">apply-generic</span> op . args)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">let</span></span> ((<span class=\"hljs-name\">type-tags</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">map</span></span> type-tag args)))\n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">let</span></span> ((<span class=\"hljs-name\">proc</span> (<span class=\"hljs-name\">get</span> op type-tags)))\n      (<span class=\"hljs-name\"><span class=\"hljs-built_in\">if</span></span> proc\n          (<span class=\"hljs-name\"><span class=\"hljs-built_in\">apply</span></span> proc (<span class=\"hljs-name\"><span class=\"hljs-built_in\">map</span></span> contents args))\n          (<span class=\"hljs-name\">error</span>\n            <span class=\"hljs-string\">\"No method for these types -- APPLY-GENERIC\"</span>\n            (<span class=\"hljs-name\"><span class=\"hljs-built_in\">list</span></span> op type-tags))))))\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'real-part</span> z))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'imag-part</span> z))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'magnitude</span> z))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'angle</span> z))\n\n\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">install-rectangular-package</span>)\n  <span class=\"hljs-comment\">;; internal procedures</span>\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">car</span></span> z))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cdr</span></span> z))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">make-from-real-imag</span> x y) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> x y))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z)\n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">sqrt</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> (<span class=\"hljs-name\">square</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z))\n             (<span class=\"hljs-name\">square</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z)))))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z)\n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">atan</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z)))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">make-from-mag-ang</span> r a) \n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> r (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cos</span></span> a)) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> r (<span class=\"hljs-name\"><span class=\"hljs-built_in\">sin</span></span> a))))\n  <span class=\"hljs-comment\">;; interface to the rest of the system</span>\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">tag</span> x) (<span class=\"hljs-name\">attach-tag</span> <span class=\"hljs-symbol\">'rectangular</span> x))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'real-part</span> '(rectangular) real-part)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'imag-part</span> '(rectangular) imag-part)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'magnitude</span> '(rectangular) magnitude)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'angle</span> '(rectangular) angle)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'make-from-real-imag</span> <span class=\"hljs-symbol\">'rectangular</span> \n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x y) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">make-from-real-imag</span> x y))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'make-from-mag-ang</span> <span class=\"hljs-symbol\">'rectangular</span> \n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (r a) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">make-from-mag-ang</span> r a))))\n  <span class=\"hljs-symbol\">'done</span>)\n(<span class=\"hljs-name\">install-rectangular-package</span>)\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">install-polar-package</span>)\n  <span class=\"hljs-comment\">;; internal procedures</span>\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">car</span></span> z))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cdr</span></span> z))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">make-from-mag-ang</span> r a) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> r a))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z)\n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cos</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z))))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z)\n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">sin</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z))))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">make-from-real-imag</span> x y) \n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">sqrt</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> (<span class=\"hljs-name\">square</span> x) (<span class=\"hljs-name\">square</span> y)))\n          (<span class=\"hljs-name\"><span class=\"hljs-built_in\">atan</span></span> y x)))\n  <span class=\"hljs-comment\">;; interface to the rest of the system</span>\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">tag</span> x) (<span class=\"hljs-name\">attach-tag</span> <span class=\"hljs-symbol\">'polar</span> x))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'real-part</span> '(polar) real-part)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'imag-part</span> '(polar) imag-part)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'magnitude</span> '(polar) magnitude)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'angle</span> '(polar) angle)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'make-from-real-imag</span> <span class=\"hljs-symbol\">'polar</span>\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x y) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">make-from-real-imag</span> x y))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'make-from-mag-ang</span> <span class=\"hljs-symbol\">'polar</span> \n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (r a) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">make-from-mag-ang</span> r a))))\n  <span class=\"hljs-symbol\">'done</span>)\n(<span class=\"hljs-name\">install-rectangular-package</span>)\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">install-complex-package</span>)\n  <span class=\"hljs-comment\">;; imported procedures from rectangular and polar packages</span>\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">make-from-real-imag</span> x y)\n    ((<span class=\"hljs-name\">get</span> <span class=\"hljs-symbol\">'make-from-real-imag</span> <span class=\"hljs-symbol\">'rectangular</span>) x y))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">make-from-mag-ang</span> r a)\n    ((<span class=\"hljs-name\">get</span> <span class=\"hljs-symbol\">'make-from-mag-ang</span> <span class=\"hljs-symbol\">'polar</span>) r a))\n  <span class=\"hljs-comment\">;; internal procedures</span>\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">add-complex</span> z1 z2)\n    (<span class=\"hljs-name\">make-from-real-imag</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z1) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z2))\n                         (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z1) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z2))))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">sub-complex</span> z1 z2)\n    (<span class=\"hljs-name\">make-from-real-imag</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">-</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z1) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> z2))\n                         (<span class=\"hljs-name\"><span class=\"hljs-built_in\">-</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z1) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> z2))))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">mul-complex</span> z1 z2)\n    (<span class=\"hljs-name\">make-from-mag-ang</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z1) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z2))\n                       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z1) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z2))))\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">div-complex</span> z1 z2)\n    (<span class=\"hljs-name\">make-from-mag-ang</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">/</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z1) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z2))\n                       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">-</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z1) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">angle</span></span> z2))))\n  <span class=\"hljs-comment\">;; interface to rest of the system</span>\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">tag</span> z) (<span class=\"hljs-name\">attach-tag</span> <span class=\"hljs-symbol\">'complex</span> z))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'add</span> '(complex complex)\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (z1 z2) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">add-complex</span> z1 z2))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'sub</span> '(complex complex)\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (z1 z2) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">sub-complex</span> z1 z2))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'mul</span> '(complex complex)\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (z1 z2) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">mul-complex</span> z1 z2))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'div</span> '(complex complex)\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (z1 z2) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">div-complex</span> z1 z2))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'make-from-real-imag</span> <span class=\"hljs-symbol\">'complex</span>\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x y) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">make-from-real-imag</span> x y))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'make-from-mag-ang</span> <span class=\"hljs-symbol\">'complex</span>\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (r a) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\">make-from-mag-ang</span> r a))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'real-part</span> '(complex) real-part)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'imag-part</span> '(complex) imag-part)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'magnitude</span> '(complex) magnitude)\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'angle</span> '(complex) angle)\n  <span class=\"hljs-symbol\">'done</span>)\n(<span class=\"hljs-name\">install-complex-package</span>)</code></pre>\n<h2>Exercise 2.77</h2>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> z (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-symbol\">'complex</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-symbol\">'rectangular</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">4</span>))))\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> z)</code></pre>\n<p>It calls <code>apply-generic</code> to do operation <code>'magnitude</code> with z</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'magnitude</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-symbol\">'complex</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-symbol\">'rectangular</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">4</span>))))</code></pre>\n<p><code>apply-generic</code> looks for operation <code>'magnitude</code> for <code>'complex</code> numbers, and applies it to value inside</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">apply</span></span> (<span class=\"hljs-name\">get</span> <span class=\"hljs-symbol\">'magnitude</span> <span class=\"hljs-symbol\">'complex</span>) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-symbol\">'rectangular</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">4</span>)))</code></pre>\n<p>That operation, thanks to Alyssa P. Hacker, is just application of same <code>magnitude</code> function, but this time for <code>'rectangular</code> object</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-symbol\">'rectangular</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">4</span>)))</code></pre>\n<p>apply-generic applies operation 'magnitude for 'rectangular type to content of rectangular \"package\":</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">apply</span></span> (<span class=\"hljs-name\">get</span> <span class=\"hljs-symbol\">'magnitude</span> <span class=\"hljs-symbol\">'rectangular</span>) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">4</span>))</code></pre>\n<p>which is <code>magnitude</code> function from inside rectangular package</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> <span class=\"hljs-number\">3</span> <span class=\"hljs-number\">4</span>))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">sqrt</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> (<span class=\"hljs-name\">square</span> <span class=\"hljs-number\">3</span>)\n         (<span class=\"hljs-name\">square</span> <span class=\"hljs-number\">4</span>)))\n<span class=\"hljs-number\">5</span></code></pre>\n<h2>Exercise 2.78</h2>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">attach-tag</span> type-tag contents)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">if</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">eq?</span></span> type-tag <span class=\"hljs-symbol\">'scheme-number</span>)\n    contents\n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cons</span></span> type-tag contents)\n  )\n)\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">type-tag</span> datum)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cond</span></span>\n    ((<span class=\"hljs-name\"><span class=\"hljs-built_in\">number?</span></span> datum) <span class=\"hljs-symbol\">'scheme-number</span>)\n    ((<span class=\"hljs-name\"><span class=\"hljs-built_in\">pair?</span></span> datum) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">car</span></span> datum))\n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">else</span></span> (<span class=\"hljs-name\">error</span> <span class=\"hljs-string\">\"Bad tagged datum -- TYPE-TAG\"</span> datum))\n  )\n)\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">contents</span> datum)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cond</span></span>\n    ((<span class=\"hljs-name\"><span class=\"hljs-built_in\">number?</span></span> datum) datum)\n    ((<span class=\"hljs-name\"><span class=\"hljs-built_in\">pair?</span></span> datum) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">cdr</span></span> datum))\n    (<span class=\"hljs-name\"><span class=\"hljs-built_in\">else</span></span> (<span class=\"hljs-name\">error</span> <span class=\"hljs-string\">\"Bad tagged datum -- CONTENTS\"</span> datum))\n  )\n)</code></pre>\n<p>To test:</p>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">add</span> x y) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'add</span> x y))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">sub</span> x y) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'sub</span> x y))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">mul</span> x y) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'mul</span> x y))\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">div</span> x y) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'div</span> x y))\n\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">install-scheme-number-package</span>)\n  (<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">tag</span> x)\n    (<span class=\"hljs-name\">attach-tag</span> <span class=\"hljs-symbol\">'scheme-number</span> x))    \n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'add</span> '(scheme-number scheme-number)\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x y) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">+</span></span> x y))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'sub</span> '(scheme-number scheme-number)\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x y) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">-</span></span> x y))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'mul</span> '(scheme-number scheme-number)\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x y) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">*</span></span> x y))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'div</span> '(scheme-number scheme-number)\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x y) (<span class=\"hljs-name\">tag</span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">/</span></span> x y))))\n  (<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'make</span> <span class=\"hljs-symbol\">'scheme-number</span>\n       (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x) (<span class=\"hljs-name\">tag</span> x)))\n  <span class=\"hljs-symbol\">'done</span>)\n(<span class=\"hljs-name\">install-scheme-number-package</span>)</code></pre>\n<h2>Exercise 2.79</h2>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'equ?</span> '(scheme-number scheme-number) =)\n\n(<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'equ?</span> '(complex complex)\n     (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x y) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">and</span></span>\n        (<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> x) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">real-part</span></span> y))\n        (<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> x) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">imag-part</span></span> y))\n    ))\n)\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\">equ?</span> x y) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'equ?</span> x y))</code></pre>\n<h2>Exercise 2.80</h2>\n<pre><code class=\"hljs language-scheme\">(<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'zero?</span> '(scheme-number)\n     (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> x <span class=\"hljs-number\">0</span>))\n)\n(<span class=\"hljs-name\">put</span> <span class=\"hljs-symbol\">'zero?</span> '(complex)\n     (<span class=\"hljs-name\"><span class=\"hljs-built_in\">lambda</span></span> (x) (<span class=\"hljs-name\"><span class=\"hljs-built_in\">=</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">magnitude</span></span> x) <span class=\"hljs-number\">0</span>))\n)\n(<span class=\"hljs-name\"><span class=\"hljs-built_in\">define</span></span> (<span class=\"hljs-name\"><span class=\"hljs-built_in\">zero?</span></span> x) (<span class=\"hljs-name\">apply-generic</span> <span class=\"hljs-symbol\">'zero?</span> x))</code></pre>"},"__N_SSG":true}