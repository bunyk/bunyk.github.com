<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sicp on Bunyk Taras</title>
    <link>http://example.org/tags/sicp/</link>
    <description>Recent content in Sicp on Bunyk Taras</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jun 2020 19:04:58 +0200</lastBuildDate>
    
	<atom:link href="http://example.org/tags/sicp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SICP 1.2.4 Exponentiation</title>
      <link>http://example.org/posts/sicp1.2.4/</link>
      <pubDate>Sat, 20 Jun 2020 19:04:58 +0200</pubDate>
      
      <guid>http://example.org/posts/sicp1.2.4/</guid>
      <description>Today I learned that ancient mit-scheme REPL could be improved with history &amp;amp; tab completion. Thanks to this StackOverflow answer. That answer is not very recent too, but here we are trying to learn really ancien magic.
And this section really starts to feel like magic. In the end, I learned that there is a way to compute n-th Fibonacci number with time complexity O(log(n)). And just few sections before, authors show how computing Fibonacci sequence using wrong approach could blow up exponencially.</description>
    </item>
    
    <item>
      <title>SICP 1.2.2 Tree recursion</title>
      <link>http://example.org/posts/sicp1.2.2/</link>
      <pubDate>Sun, 14 Jun 2020 21:06:09 +0200</pubDate>
      
      <guid>http://example.org/posts/sicp1.2.2/</guid>
      <description>I like how they did not shown yet how to work with any data structures, but wrote function that behaves like a immutable array:
(define (first-denomination kinds-of-coins) (cond ((= kinds-of-coins 1) 1) ((= kinds-of-coins 2) 5) ((= kinds-of-coins 3) 10) ((= kinds-of-coins 4) 25) ((= kinds-of-coins 5) 50))) Exercise 1.11 Functions should produce following sequence: 1, 2, 4, 11, 25, 59, 142 (Sequence A100550 in the On-Line Encyclopedia of Integer Sequences)</description>
    </item>
    
    <item>
      <title>SICP1.2.1 Recursion &amp; Iteration</title>
      <link>http://example.org/posts/sicp1.2.1/</link>
      <pubDate>Sun, 14 Jun 2020 20:28:16 +0200</pubDate>
      
      <guid>http://example.org/posts/sicp1.2.1/</guid>
      <description>&lt;p&gt;Ok, second subchapter is more challenging, so I&amp;rsquo;ll go by subsections.&lt;/p&gt;

&lt;p&gt;Here is &lt;a href=&#34;https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book-Z-H-11.html#%_sec_1.2.1&#34;&gt;link to the chapter of the book I would solve today&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SICP 1.1 The Elements of Programming</title>
      <link>http://example.org/posts/sicp1.1/</link>
      <pubDate>Sat, 13 Jun 2020 23:22:32 +0200</pubDate>
      
      <guid>http://example.org/posts/sicp1.1/</guid>
      <description>&lt;p&gt;Decided to finally try and go through this book. Will try to keep journal with notes here.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>