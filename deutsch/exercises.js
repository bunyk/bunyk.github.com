// Generated by CoffeeScript 1.6.1
(function() {
  var $, c;

  $ = jQuery;

  c = console.log.bind(console);

  $.fn.checkContent = function(visual) {
    var $this, correct;
    $this = $(this);
    c('Checking if #{$this} is corrrect');
    correct = $this.data('content') === $this.data('correct');
    if (visual) {
      if (correct) {
        $this.css('background-color', '#CFC');
      } else {
        $this.css('background-color', '#FAA');
      }
    }
    return correct;
  };

  $.fn.dragExcercise = function(check_instantly) {
    var $check, $droppables, $this, check_all;
    c('dragExcercise plugin started for', this);
    /*
    Inside exercise element elements with class "draggable" should be 
    dragged into elements with class "droppable".
    When the html content of draggable equals data stored in 
    data-correct attribute of droppable element, then draggable and
    droppable become green. Else red.
    */

    $('.draggable', this).draggable();
    $droppables = $('.droppable', this).droppable({
      tolerance: 'pointer',
      drop: function(evt, elem) {
        var $elem, $this;
        $this = $(this);
        $elem = $(elem.draggable);
        c($elem.html(), '- data put into container');
        c($this.data('correct'), '- data which should be put into container');
        if ($this.data('content')) {
          c('element already occupied');
          return false;
        }
        $this.data('content', $elem.html());
        c('content put into element');
        if (check_instantly) {
          return $this.checkContent(true);
        }
      },
      out: function(evt, elem) {
        var $elem, $this;
        $this = $(this);
        $elem = $(elem.draggable);
        if ($this.data('content') !== $elem.html()) {
          c('leaves some other element');
          return false;
        }
        $this.css('background-color', 'white');
        $this.data('content', '');
        return $elem.css('color', 'black');
      }
    });
    check_all = function() {
      var correct, total;
      total = 0;
      correct = 0;
      $droppables.each(function() {
        if ($(this).checkContent(true)) {
          correct++;
        }
        return total++;
      });
      return correct / total;
    };
    if (!check_instantly) {
      $this = $(this);
      $check = $('<button>Check</button>').click(function() {
        var points;
        points = Math.round($(check_all() * 12));
        return $this.append("<p>Points = " + mark + " of 12</p>");
      });
      c('Adding check button');
      return $this.append($check);
    }
  };

}).call(this);
