// Generated by CoffeeScript 1.6.1
(function() {
  var $, Plane, initialize,
    _this = this;

  $ = jQuery;

  Plane = (function() {

    function Plane(lat, lng) {
      var _this = this;
      this.lat = lat;
      this.lng = lng;
      this.move = function() {
        return Plane.prototype.move.apply(_this, arguments);
      };
      this.altitude = 0;
      this.set_velocity(0, 0);
      setInterval(this.move, 100);
    }

    Plane.prototype.set_velocity = function(v_x, v_y) {
      this.v_x = v_x;
      this.v_y = v_y;
      return console.log('Velocity:', this.v_x, this.v_y);
    };

    Plane.prototype.get_position = function() {
      return new google.maps.LatLng(this.lat, this.lng);
    };

    Plane.prototype.get_zoom = function() {
      return 18 - this.altitude / 10.0;
    };

    Plane.prototype.change_altitude = function(d) {
      this.altitude += d;
      if (this.altitude < 0) {
        this.altitude = 0;
      }
      console.log(this.altitude);
      if (this.map != null) {
        return this.map.setZoom(this.get_zoom());
      }
    };

    Plane.prototype.move = function() {
      console.log('Position:', this.lat, this.lng);
      this.lat -= this.v_y;
      this.lng += this.v_x;
      if (this.map != null) {
        return this.map.panTo(this.get_position());
      }
    };

    return Plane;

  })();

  initialize = function() {
    var map, plane;
    plane = new Plane(48.884167, 24.686111);
    map = new google.maps.Map($("#map-canvas")[0], {
      center: plane.get_position(),
      zoom: plane.get_zoom(),
      disableDefaultUI: true,
      mapTypeId: google.maps.MapTypeId.SATELLITE
    });
    plane.map = map;
    return $(window).keydown(function(event) {
      var s;
      s = 0.0005;
      console.log(event.keyCode);
      switch (event.keyCode) {
        case 38:
          return plane.set_velocity(0, -s);
        case 39:
          return plane.set_velocity(s, 0);
        case 40:
          return plane.set_velocity(0, s);
        case 41:
          return plane.set_velocity(-s, 0);
        case 32:
          return plane.set_velocity(0, 0);
        case 74:
          return plane.change_altitude(-1);
        case 75:
          return plane.change_altitude(1);
      }
    });
  };

  $(function() {
    return initialize();
  });

}).call(this);
