// Generated by CoffeeScript 1.6.1
(function() {
  var $, LoadingSprite, LoadingSpriteSet, MovingSprite, Tile, get_random_sprite;

  $ = jQuery;

  LoadingSpriteSet = (function() {

    function LoadingSpriteSet(path, animations, onLoad) {
      this.path = path;
      this.animations = animations;
      this.onLoad = onLoad;
      this.load();
    }

    LoadingSpriteSet.prototype.load = function() {
      var allready, data, img, name, path, x, _ref, _results;
      allready = new AllReady(_.bind(this.onLoad, this));
      _ref = this.animations;
      _results = [];
      for (name in _ref) {
        data = _ref[name];
        console.log("loading " + name);
        data.frames = [];
        _results.push((function() {
          var _i, _ref1, _results1;
          _results1 = [];
          for (x = _i = 0, _ref1 = data.count - 1; 0 <= _ref1 ? _i <= _ref1 : _i >= _ref1; x = 0 <= _ref1 ? ++_i : --_i) {
            img = new Image();
            img.onload = allready.wait();
            path = "" + this.path + (data.pattern(x + data.first_index));
            img.src = path;
            _results1.push(data.frames[x] = img);
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    return LoadingSpriteSet;

  })();

  LoadingSprite = (function() {

    function LoadingSprite(path, onLoad) {
      this.path = path;
      this.onLoad = onLoad;
      this.load();
    }

    LoadingSprite.prototype.load = function() {
      this.img = new Image();
      this.img.onload = this.onLoad;
      return this.img.src = this.path;
    };

    return LoadingSprite;

  })();

  MovingSprite = (function() {

    function MovingSprite(spriteSet) {
      this.spriteSet = spriteSet;
      this.setAnimation(_.keys(this.spriteSet.animations)[0]);
    }

    MovingSprite.prototype.setAnimation = function(name) {
      this.frame = 0;
      this.animation_name = name;
      return this.animation = this.spriteSet.animations[name];
    };

    MovingSprite.prototype.animate = function(ctx) {
      var img;
      this.frame = (this.frame + 1) % this.animation.count;
      img = this.animation.frames[this.frame];
      if (img) {
        return ctx.drawImage(img, this.x, this.y);
      }
    };

    return MovingSprite;

  })();

  Tile = (function() {

    function Tile(sprite) {
      this.sprite = sprite;
      this.width = this.sprite.img.naturalWidth;
      this.height = this.sprite.img.naturalHeight;
      console.log(this.width, this.height);
    }

    Tile.prototype.render = function(ctx, i, j) {
      var x, y;
      x = i * this.width * 0.75;
      y = j * this.height;
      if (i % 2) {
        y += this.height / 2.0;
      }
      console.log(x, y);
      return ctx.drawImage(this.sprite.img, x, y);
    };

    return Tile;

  })();

  get_random_sprite = function(type) {
    var sprite;
    sprite = new MovingSprite(type);
    sprite.x = _.random(750);
    sprite.y = _.random(550);
    sprite.current_animation = 'idle';
    sprite.frame = 0;
    return sprite;
  };

  $(function() {
    var allready, canvas, coast_sprite, ctx, desert_sprite, fire, flowers_sprite, start, windmill;
    canvas = $('#canvas')[0];
    ctx = canvas.getContext('2d');
    start = function() {
      var animate, coast, desert, fires, flowers, i, mills;
      console.log('Loaded!');
      desert = new Tile(desert_sprite);
      coast = new Tile(coast_sprite);
      flowers = new Tile(flowers_sprite);
      mills = (function() {
        var _i, _results;
        _results = [];
        for (i = _i = 0; _i <= 40; i = ++_i) {
          _results.push(get_random_sprite(windmill));
        }
        return _results;
      })();
      fires = (function() {
        var _i, _results;
        _results = [];
        for (i = _i = 0; _i <= 30; i = ++_i) {
          _results.push(get_random_sprite(fire));
        }
        return _results;
      })();
      animate = function() {
        var fire, j, mill, _i, _j, _k, _l, _len, _len1, _m, _n, _o, _results;
        for (i = _i = 0; _i <= 5; i = ++_i) {
          for (j = _j = 0; _j <= 8; j = ++_j) {
            desert.render(ctx, i, j);
          }
        }
        for (i = _k = 5; _k <= 12; i = ++_k) {
          for (j = _l = 0; _l <= 8; j = ++_l) {
            flowers.render(ctx, i, j);
          }
        }
        for (j = _m = 0; _m <= 8; j = ++_m) {
          coast.render(ctx, 13, j);
        }
        for (_n = 0, _len = mills.length; _n < _len; _n++) {
          mill = mills[_n];
          mill.animate(ctx);
        }
        _results = [];
        for (_o = 0, _len1 = fires.length; _o < _len1; _o++) {
          fire = fires[_o];
          _results.push(fire.animate(ctx));
        }
        return _results;
      };
      return setInterval(animate, 50);
    };
    allready = new AllReady(start);
    windmill = new LoadingSpriteSet('wesnoth/scenery/', {
      'idle': {
        pattern: function(n) {
          return "windmill-" + (_.zfill(n, 2)) + ".png";
        },
        first_index: 1,
        count: 18
      }
    }, allready.wait());
    fire = new LoadingSpriteSet('wesnoth/scenery/', {
      'idle': {
        pattern: function(n) {
          return "fire" + n + ".png";
        },
        first_index: 1,
        count: 8
      }
    }, allready.wait());
    desert_sprite = new LoadingSprite('wesnoth/terrain/desert.png', allready.wait());
    flowers_sprite = new LoadingSprite('wesnoth/terrain/flowers.png', allready.wait());
    return coast_sprite = new LoadingSprite('wesnoth/terrain/coast-tile.png', allready.wait());
  });

}).call(this);
